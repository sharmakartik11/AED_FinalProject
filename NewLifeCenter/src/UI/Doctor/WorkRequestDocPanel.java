/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Doctor;

import NewLife.UserAccount.UserAccount;
import NewLife.WorkList.LabWorkRequest;
import NewLifeCenter.NewLife;
import java.awt.CardLayout;
import java.util.Properties;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JPanel;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author shivanidatar
 */
public class WorkRequestDocPanel extends javax.swing.JPanel {

    /**
     * Creates new form WorkRequestDocPanel
     */
    JPanel userProcessContainer;
    NewLife ecosystem;
    UserAccount userAccount;
    LabWorkRequest workRequest;
    LabWorkRequest labTestWorkRequest;
    public WorkRequestDocPanel(JPanel userProcessContainer, NewLife ecosystem, UserAccount account, LabWorkRequest workRequest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = account;
        this.workRequest = workRequest;
        changeButtonText();
        display();
    }
    
    private void display() {
        customerNameValue.setText(workRequest.getPatient().getName());
        status.setText(workRequest.getStatus());
        heartrate.setText(workRequest.getPatient().getHeartRate());
        oxygenlevel.setText(workRequest.getPatient().getOxygenlevel());
        bloodpressure.setText(workRequest.getPatient().getBloodPressure());

    }
    
    private void changeButtonText() {
        switch (workRequest.getStatus()) {
            case "Doctor Assigned":
                btnStatus.setText("Schedule Appointment");
                break;
            case "Zoom meeting scheduled":
                btnStatus.setText("Complete Appointment");
                break;
            default:
                btnStatus.setVisible(false);
        }
    }
    
    private static void sendFromGMail(String from, String pass, String[] to, String subject, String body) {
        Properties props = System.getProperties();
        String host = "smtp.gmail.com";
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", pass);
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(props);
        MimeMessage message = new MimeMessage(session);

        try {
            message.setFrom(new InternetAddress(from));
            InternetAddress[] toAddress = new InternetAddress[to.length];

            // To get the array of addresses
            for( int i = 0; i < to.length; i++ ) {
                toAddress[i] = new InternetAddress(to[i]);
            }

            for( int i = 0; i < toAddress.length; i++) {
                message.addRecipient(Message.RecipientType.TO, toAddress[i]);
            }

            message.setSubject(subject);
            message.setText(body);
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
        }
        catch (AddressException ae) {
            ae.printStackTrace();
        }
        catch (MessagingException me) {
            me.printStackTrace();
        }
    }
    
    private void sendMail(){
        String from = "shivanidatar250496@gmail.com";
        String pass = "Shivani@1996";
        String[] to = { workRequest.getPatient().getEmail() }; // list of recipient email addresses
        String subject = "ZOOM LINK";
        String body = zoomLinkTxtField.getText();

        sendFromGMail(from, pass, to, subject, body);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        customerNameValue = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnStatus = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        zoomLinkTxtField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        heartrate = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bloodpressure = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        oxygenlevel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(new java.awt.GridBagLayout());

        backJButton.setBackground(new java.awt.Color(255, 255, 204));
        backJButton.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(backJButton, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Patient Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 153, 0, 0);
        add(jLabel3, gridBagConstraints);

        customerNameValue.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        customerNameValue.setForeground(new java.awt.Color(255, 255, 255));
        customerNameValue.setText("<Value>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(customerNameValue, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Garamond", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("APPOINTMENT DETAILS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 411;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        add(jLabel9, gridBagConstraints);

        btnStatus.setBackground(new java.awt.Color(255, 255, 204));
        btnStatus.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        btnStatus.setText("Schedule Appointment");
        btnStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 158, 0, 0);
        add(btnStatus, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 207, 0, 0);
        add(jLabel5, gridBagConstraints);

        status.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        status.setForeground(new java.awt.Color(255, 255, 255));
        status.setText("<Value>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(status, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Zoom Link");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 168, 0, 0);
        add(jLabel4, gridBagConstraints);

        zoomLinkTxtField.setEditable(false);
        zoomLinkTxtField.setBackground(new java.awt.Color(255, 255, 204));
        zoomLinkTxtField.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        zoomLinkTxtField.setForeground(new java.awt.Color(255, 255, 255));
        zoomLinkTxtField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        zoomLinkTxtField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 242;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(zoomLinkTxtField, gridBagConstraints);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.ipadx = 859;
        gridBagConstraints.ipady = 330;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        add(jLabel1, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Patient Heart Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 116, 0, 0);
        add(jLabel6, gridBagConstraints);

        heartrate.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        heartrate.setForeground(new java.awt.Color(255, 255, 255));
        heartrate.setText("<Value>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(heartrate, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Patient Blood Pressure");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 84, 0, 0);
        add(jLabel7, gridBagConstraints);

        bloodpressure.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        bloodpressure.setForeground(new java.awt.Color(255, 255, 255));
        bloodpressure.setText("<Value>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(bloodpressure, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Patient Oxygen Level");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 99, 0, 0);
        add(jLabel8, gridBagConstraints);

        oxygenlevel.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        oxygenlevel.setForeground(new java.awt.Color(255, 255, 255));
        oxygenlevel.setText("<Value>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 86, 0, 0);
        add(oxygenlevel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        DoctorAreaPanel doctorAreaJPanel = new DoctorAreaPanel(userProcessContainer, userAccount, ecosystem);
        userProcessContainer.add("doctorAreaJPanel", doctorAreaJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void zoomLinkTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomLinkTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zoomLinkTxtFieldActionPerformed

    private void btnStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusActionPerformed
        // TODO add your handling code here:
         if (workRequest.getStatus().equals("Doctor Assigned")) {
            ThreadLocalRandom random = ThreadLocalRandom.current();
            int leftLimit = 48; // numeral '0'
            int rightLimit = 122; // letter 'z'
            int targetStringLength = 31;
            Random r = new Random();
            String generatedString = r.ints(leftLimit, rightLimit + 1).filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97)).limit(targetStringLength).collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString();
            String url = "https://zoom.us/j/"+random.nextLong(10_000_000_000L, 100_000_000_000L)+"?pwd="+generatedString;
            zoomLinkTxtField.setText(url);
            workRequest.setZoomLink(zoomLinkTxtField.getText());
            sendMail();
            workRequest.setStatus("Zoom meeting scheduled");
            workRequest.setTestResult("Meeting in Process");
            JOptionPane.showMessageDialog(null, "Meeting will start");
            zoomLinkTxtField.setEnabled(false);
        } else if (workRequest.getStatus().equals("Zoom meeting scheduled")) {
            workRequest.setStatus("Meeting ended");
            workRequest.setTestResult("Meeting Completed");
            JOptionPane.showMessageDialog(null, "Meeting has ended");
        } else {
            btnStatus.setVisible(false);
        }
        changeButtonText();
        status.setText(workRequest.getStatus());
        
    }//GEN-LAST:event_btnStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel bloodpressure;
    private javax.swing.JButton btnStatus;
    private javax.swing.JLabel customerNameValue;
    private javax.swing.JLabel heartrate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel oxygenlevel;
    private javax.swing.JLabel status;
    private javax.swing.JTextField zoomLinkTxtField;
    // End of variables declaration//GEN-END:variables
}
